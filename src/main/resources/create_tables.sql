DROP TABLE IF EXISTS boat CASCADE;

CREATE TABLE boat(
    enabled boolean,
    ability bigint NOT NULL,
    marin_id bigint,
    price_for_day bigint NOT NULL,
    tuition bigint NOT NULL,
    model varchar(255) NOT NULL,
    name varchar(255) NOT NULL,
    "type" varchar(255) NOT NULL,
    PRIMARY KEY(tuition),
    CONSTRAINT fka3ytdod31n9hol9bisel76a6b FOREIGN key(marin_id) REFERENCES marin(id),
    CONSTRAINT boat_price_for_day_check CHECK (price_for_day >= 1),
    CONSTRAINT boat_type_check CHECK ((type)::text = ANY ((ARRAY['YATE'::character varying, 'LANCHA'::character varying, 'VELERO'::character varying])::text[]))
);

-- Generated by the database client.
DROP TABLE IF EXISTS marin CASCADE;

CREATE TABLE marin(
    dni varchar(8) NOT NULL,
    id SERIAL NOT NULL,
    name varchar(15) NOT NULL,
    lastname varchar(20) NOT NULL,
    PRIMARY KEY(id)
);

DROP TABLE IF EXISTS rental CASCADE;

CREATE TABLE rental(
    confirmed boolean,
    date_end date,
    date_init date,
    boat_id bigint,
    id SERIAL NOT NULL,
    total bigint,
    user_id bigint,
    confirmation_token varchar(255),
    state varchar(255),
    PRIMARY KEY(id),
    CONSTRAINT fk8b0kywujh5yom580ucq6ablj4 FOREIGN key(boat_id) REFERENCES boat(tuition),
    CONSTRAINT fkj1ty59tjbwlmx7p4uotyto7lp FOREIGN key(user_id) REFERENCES users(id),
    CONSTRAINT rental_state_check CHECK ((state)::text = ANY ((ARRAY['PENDIENTE'::character varying, 'CONFIRMADO'::character varying, 'CANCELADO'::character varying, 'FINALIZADA'::character varying])::text[]))
);


DROP TABLE IF EXISTS role CASCADE;

CREATE TABLE role(
    id SERIAL NOT NULL,
    name varchar(255),
    PRIMARY KEY(id)
);


DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE users(
    enabled boolean NOT NULL,
    id SERIAL NOT NULL,
    email varchar(255) NOT NULL,
    password varchar(255) NOT NULL,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX users_email_key ON users USING btree ("email");


DROP TABLE IF EXISTS users_roles CASCADE;
CREATE TABLE users_roles(
    role_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT fkt4v0rrweyk393bdgt107vdx0x FOREIGN key(role_id) REFERENCES role(id),
    CONSTRAINT fk2o0jvgh89lemvvo17cbqvdxaa FOREIGN key(user_id) REFERENCES users(id)
);
CREATE UNIQUE INDEX users_roles_user_id_role_id_key ON users_roles USING btree ("role_id","user_id");
CREATE UNIQUE INDEX ukq3r1u8cne2rw2hkr899xuh7vj ON users_roles USING btree ("role_id","user_id");


DROP FUNCTION IF EXISTS get_available_boats(start_date DATE, end_date DATE);




